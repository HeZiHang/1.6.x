<?php
if(posix_getuid()<>0){die("Cannot be used in web server mode\n\n");}
$GLOBALS["VERBOSE"]=false;
if(preg_match("#--verbose#",implode(" ",$argv))){$GLOBALS["DEBUG"]=true;$GLOBALS["VERBOSE"]=true;}
if($GLOBALS["VERBOSE"]){ini_set('html_errors',0);ini_set('display_errors', 1);ini_set('error_reporting', E_ALL);}
include_once(dirname(__FILE__).'/ressources/class.templates.inc');
include_once(dirname(__FILE__).'/ressources/class.ldap.inc');
include_once(dirname(__FILE__).'/ressources/class.ini.inc');
include_once(dirname(__FILE__).'/ressources/class.mysql.inc');
include_once(dirname(__FILE__).'/ressources/class.ccurl.inc');
include_once(dirname(__FILE__).'/framework/class.unix.inc');
include_once(dirname(__FILE__).'/framework/frame.class.inc');
include_once(dirname(__FILE__).'/ressources/class.squidguard.inc');
include_once(dirname(__FILE__).'/ressources/class.compile.ufdbguard.inc');
include_once(dirname(__FILE__).'/ressources/class.os.system.inc');

$GLOBALS["CLASS_SOCKETS"]=new sockets();
$EnableRemoteStatisticsAppliance=$GLOBALS["CLASS_SOCKETS"]->GET_INFO("EnableRemoteStatisticsAppliance");
if(!is_numeric($EnableRemoteStatisticsAppliance)){$EnableRemoteStatisticsAppliance=0;}
if($EnableRemoteStatisticsAppliance==1){die();}

if(!ifMustBeExecuted()){die();}

if(system_is_overloaded(basename(__FILE__))){ufdbguard_admin_events("Fatal: Overloorting task","MAIN",__FILE__,__LINE__,"update");}



if($argv[1]=="--www"){GetMalWaresArtica();die();}
if($argv[1]=="--phish"){GetPhishs();die();}
if($argv[1]=="--compile"){compile();die();}


GetMalWares();


http://support.clean-mx.de/clean-mx/xmlphishing.php?


function compile(){
	
	$ff=new compile_ufdbguard();
	$ff->phishing_uris();
	$ff->malwares_uris();
	echo "Done...\n";
}


function GetPhishs(){
	
	$UseWgetForPhishAndVirs=$GLOBALS["CLASS_SOCKETS"]->GET_INFO("UseWgetForPhishAndVirs");
	if(!is_numeric($UseWgetForPhishAndVirs)){$UseWgetForPhishAndVirs=0;}
	
	$uri="http://support.clean-mx.de/clean-mx/xmlphishing.php?";
	$unix=new unix();
	$cache_temp="/root/phishing.cache";
	
	$time=$unix->file_time_min($cache_temp);
	echo "$cache_temp - {$time}Mns\n";
	if($time>60){
		@unlink($cache_temp);
		echo "Downloading $uri -> $cache_temp\n";
		
		if($UseWgetForPhishAndVirs==1){
			$cmd=$unix->find_program("wget")." \"$uri\" -O $cache_temp";
			echo __FUNCTION__."()::$cmd\n";
			shell_exec($cmd);
		}else{
			$curl=new ccurl("$uri");
			$curl->Timeout=360;
			if(!$curl->GetFile($cache_temp)){
				echo "Fatal error downloading $uri $curl->error\n";
				ufdbguard_admin_events("Fatal: unable to download index file $uri `$curl->error`",__FUNCTION__,__FILE__,__LINE__,"update");
				die();
			}
		}
		echo __FUNCTION__."()::Downloading success...\n";
	}
	
	
	
	$DestFile="/var/lib/squidguard/phishing/urls";
	@mkdir(dirname($DestFile),0755,true);
	
	echo "Open `$cache_temp`\n";
	$handle = @fopen($cache_temp, "r");
	$fh = fopen($DestFile, 'w+');
	
	$c=0;
	$l=0;
	if (!$handle) {echo "Failed handle $cache_temp\n";return;}
		while (!feof($handle)) {
			$l++;
			$ligne = trim(fgets($handle, 4096)); // Read a line.
			if($ligne==null){continue;}
	
		if(preg_match("#<url><\!\[CDATA\[http:\/\/(.+?)\]\]><\/url>#",$ligne,$re)){
			if(preg_match("#^www\.(.+)#", $re[1],$ri)){$re[1]=$ri[1];}
			fwrite($fh, $re[1]."\n");
			$c++;
		}
	
	}
	
	fclose($fh);
	fclose($handle);
	echo __FUNCTION__."() success $c items in $l lines\n";
		if($c>10){
		if(is_file("/root/ftp-password")){
			compress($DestFile,"/root/phishing.gz");
			shell_exec("curl -T /root/phishing.gz ftp://www.artica.fr/download/shalla/ --user ".@file_get_contents("/root/ftp-password"));
		
		}}
		
	if($l<10){@unlink($cache_temp);}

}


function GetMalWares(){
	if(!ifMustBeExecuted()){writelogs("Die() ifMustBeExecuted -> FALSE",__FUNCTION__,__FILE__,__LINE__);die();}
	$UseWgetForPhishAndVirs=$GLOBALS["CLASS_SOCKETS"]->GET_INFO("UseWgetForPhishAndVirs");
	if(!is_numeric($UseWgetForPhishAndVirs)){$UseWgetForPhishAndVirs=0;}	
	$pidfile="/etc/artica-postfix/pids/".basename(__FILE__).".".__FUNCTION__.".pid";
	$oldpid=@file_get_contents($pidfile);
	if($oldpid<100){$oldpid=null;}
	$unix=new unix();
	if($unix->process_exists($oldpid,basename(__FILE__))){if($GLOBALS["VERBOSE"]){echo "Already executed pid $oldpid\n";}die();}
	$mypid=getmypid();
	@file_put_contents($pidfile,$mypid);	
	GetPhishs();
	
	$uri="http://support.clean-mx.de/clean-mx/xmlviruses.php?response=alive";
	$unix=new unix();
	$cache_temp="/root/xmlviruses.cache";
	$time=$unix->file_time_min($cache_temp);
	echo "$cache_temp - {$time}Mns\n";
	if($time>60){
		@unlink($cache_temp);
		echo "Downloading $uri -> $cache_temp\n";
		
		if($UseWgetForPhishAndVirs==1){
			$cmd=$unix->find_program("wget")." \"$uri\" -O $cache_temp";
			echo __FUNCTION__."()::$cmd\n";			
			shell_exec($cmd);
		}else{
			$curl=new ccurl("$uri");
			$curl->Timeout=360;
			if(!$curl->GetFile($cache_temp)){
				echo "Fatal error downloading $uri $curl->error\n";
				ufdbguard_admin_events("Fatal: unable to download index file $uri `$curl->error`",__FUNCTION__,__FILE__,__LINE__,"update");
				die();
			}
		}
		echo __FUNCTION__."()::Downloading success...\n";
	}
	

	
	
	echo "Open $cache_temp\n";
	$DestFile="/var/lib/squidguard/malware/urls";
	@mkdir(dirname($DestFile),0755,true);
	
	$handle = @fopen($cache_temp, "r");
	$fh = fopen($DestFile, 'w+');
	
	$l=0;
	$c=0;
	if (!$handle) {echo "Failed\n";return;}
		while (!feof($handle)) {
			$ligne = trim(fgets($handle, 4096)); // Read a line.
			if($ligne==null){continue;}
	
		if(preg_match("#<url><\!\[CDATA\[http:\/\/(.+?)\]\]><\/url>#",$ligne,$re)){
			if(preg_match("#^www\.(.+)#", $re[1],$ri)){$re[1]=$ri[1];}
			$c++;
			fwrite($fh, $re[1]."\n");
			
		}
	
	}
	
	fclose($fh);
	fclose($handle);
	if($l<10){@unlink($cache_temp);}
	
	if($c>10){	
		if(is_file("/root/ftp-password")){
			compress($DestFile,"/root/malware.gz");
			shell_exec("curl -T /root/malware.gz ftp://www.artica.fr/download/shalla/ --user ".@file_get_contents("/root/ftp-password"));
		
		}
	}

}


function GetPhishTankArtica(){
	
	$uri="http://www.artica.fr/download/shalla/online-valid.csv.gz";
	$unix=new unix();
	$cache_temp=$unix->FILE_TEMP().".tgz";
	
	
	
	$ExtractedTmp=$unix->FILE_TEMP().".txt";
	if(!is_file("$cache_temp")){
		echo "Downloading $uri -> $cache_temp\n";	
		$curl=new ccurl("$uri");
		if(!$curl->GetFile($cache_temp)){
			echo "Fatal error downloading $uri $curl->error\n";
			ufdbguard_admin_events("Fatal: unable to download index file $uri `$curl->error`",__FUNCTION__,__FILE__,__LINE__,"update-phishing");
			die();
		}
		echo "Downloading success...\n";	
	}

	
	uncompress($cache_temp,$ExtractedTmp);
	if($GLOBALS["VERBOSE"]){echo "Extract $cache_temp (". round(filesize($cache_temp)/1024)." ko) -> $ExtractedTmp ".round(filesize($ExtractedTmp)/1024).". Ko\n";}
	
	@unlink($cache_temp);
	$q=new mysql_squid_builder();	
	$q->CheckTables();
	$CountA=$q->COUNT_ROWS("uris_phishing");
	$prefix="INSERT IGNORE INTO uris_phishing (uri) VALUES ";
	$handle = @fopen($ExtractedTmp, "r");
	if (!$handle) {echo "<H2>Failed</H2>";return;}

	$c=0;
	while (!feof($handle)) {
			$ligne = fgets($handle, 4096); // Read a line.
			if(trim($ligne)==null){continue;}
			$ligne=trim($ligne);
			$tt=explode(",", $ligne);
			$uri=$tt[1];
			if(preg_match("#http:\/\/(.+)#", $uri,$re)){$uri=$re[1];}
			if(preg_match("#^www\.(.+)#", $uri,$re)){$uri=$re[1];}
			if($uri==null){continue;}
			$c++;
			$uri=addslashes($uri);
			$final[]="('$uri')";
			if(count($final)>1000){
				$q->QUERY_SQL($prefix.@implode(",",$final));
				if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-phishing");}
				$final=array();
					
			}
	}	
	
	if(count($final)>0){
		$q->QUERY_SQL($prefix.@implode(",",$final));
		if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-malwares");return;}
		$final=array();	
	}
	@unlink($ExtractedTmp);
	$CountB=$q->COUNT_ROWS("uris_phishing");
	if($GLOBALS["VERBOSE"]){echo "CountB -> $CountB in $c Lines\n";}
	
	$SUM=$CountB-$CountA;
	if($GLOBALS["VERBOSE"]){echo __FUNCTION__."() SUM --------- > $SUM new items\n";}
	if($SUM>0){ufdbguard_admin_events("PhishTank: Success adding $SUM new phishing uris",__FUNCTION__,__FILE__,__LINE__,"update-phishing");}	
	
	
}


function GetPhishingArtica(){
	
	GetPhishTankArtica();
	$uri="http://www.artica.fr/download/shalla/phishing.gz";
	$unix=new unix();
	$cache_temp=$unix->FILE_TEMP().".tgz";
	
	
	
	$ExtractedTmp=$unix->FILE_TEMP().".txt";
	if(!is_file("$cache_temp")){
		echo "Downloading $uri -> $cache_temp\n";	
		$curl=new ccurl("$uri");
		if(!$curl->GetFile($cache_temp)){
			echo "Fatal error downloading $uri $curl->error\n";
			ufdbguard_admin_events("Fatal: unable to download index file $uri `$curl->error`",__FUNCTION__,__FILE__,__LINE__,"update-phishing");
			die();
		}
		echo "Downloading success...\n";	
	}

	
	uncompress($cache_temp,$ExtractedTmp);
	if($GLOBALS["VERBOSE"]){echo "Extract $cache_temp (". round(filesize($cache_temp)/1024)." ko) -> $ExtractedTmp ".round(filesize($ExtractedTmp)/1024).". Ko\n";}
	
	@unlink($cache_temp);
	$q=new mysql_squid_builder();	
	$q->CheckTables();
	$CountA=$q->COUNT_ROWS("uris_phishing");
	$prefix="INSERT IGNORE INTO uris_phishing (uri) VALUES ";
	$handle = @fopen($ExtractedTmp, "r");
	if (!$handle) {echo "<H2>Failed</H2>";return;}

	$c=0;
	while (!feof($handle)) {
			$ligne = fgets($handle, 4096); // Read a line.
			if(trim($ligne)==null){continue;}
			$ligne=trim($ligne);
			$c++;
			$final[]="('$ligne')";
			if(count($final)>1000){
				$q->QUERY_SQL($prefix.@implode(",",$final));
				if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-phishing");return;}
				$final=array();
					
			}
	}	
	
	if(count($final)>0){
		$q->QUERY_SQL($prefix.@implode(",",$final));
		if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-malwares");return;}
		$final=array();	
	}
	@unlink($ExtractedTmp);
	$CountB=$q->COUNT_ROWS("uris_phishing");
	if($GLOBALS["VERBOSE"]){echo "CountB -> $CountB in $c Lines\n";}
	
	$SUM=$CountB-$CountA;
	if($GLOBALS["VERBOSE"]){echo __FUNCTION__."() SUM --------- > $SUM new items\n";}
	if($SUM>0){ufdbguard_admin_events("Success adding $SUM new phishing uris",__FUNCTION__,__FILE__,__LINE__,"update-phishing");}

}



function GetMalWaresArtica(){
	$unix=new unix();
	if(!$GLOBALS["VERBOSE"]){
		$pidfile="/etc/artica-postfix/pids/".basename(__FILE__).".".__FUNCTION__.".pid";
		$pidTime="/etc/artica-postfix/pids/".basename(__FILE__).".".__FUNCTION__.".time";
		$oldpid=@file_get_contents($pidfile);
		if($oldpid<100){$oldpid=null;}
		
		if($unix->process_exists($oldpid,basename(__FILE__))){if($GLOBALS["VERBOSE"]){echo "Already executed pid $oldpid\n";}die();}
		$mypid=getmypid();
		@file_put_contents($pidfile,$mypid);	
	}
	
	$TimeCache=$unix->file_time_min($pidTime);
	if($TimeCache<240){return;}
	@unlink($TimeCache);
	@file_put_contents($TimeCache, time());
	GetPhishingArtica();
	
	$uri="http://www.artica.fr/download/shalla/malware.gz";
	$unix=new unix();
	$cache_temp=$unix->FILE_TEMP().".tgz";
	$ExtractedTmp=$unix->FILE_TEMP().".txt";
	if(!is_file("$cache_temp")){
		$curl=new ccurl("$uri");
		if(!$curl->GetFile($cache_temp)){
			echo "Fatal error downloading $uri $curl->error\n";
			ufdbguard_admin_events("Fatal: unable to download index file $uri `$curl->error`",__FUNCTION__,__FILE__,__LINE__,"update-malwares");
			die();
		}
		echo "Downloading success...\n";	
	}

	
	uncompress($cache_temp,$ExtractedTmp);
	if($GLOBALS["VERBOSE"]){echo "Extract $cache_temp (". round(filesize($cache_temp)/1024)." ko) -> $ExtractedTmp ".round(filesize($ExtractedTmp)/1024).". Ko\n";}
	
	@unlink($cache_temp);
	$q=new mysql_squid_builder();	
	$q->CheckTables();
	$CountA=$q->COUNT_ROWS("uris_malwares");
	$prefix="INSERT IGNORE INTO uris_malwares (uri) VALUES ";
	$handle = @fopen($ExtractedTmp, "r");
	if (!$handle) {echo "<H2>Failed</H2>";return;}

	$c=0;
	while (!feof($handle)) {
			$ligne = fgets($handle, 4096); // Read a line.
			if(trim($ligne)==null){continue;}
			$ligne=trim($ligne);
			$ligne=addslashes($ligne);
			$c++;
			$final[]="('$ligne')";
			if(count($final)>1000){
				$q->QUERY_SQL($prefix.@implode(",",$final));
				if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-malwares");return;}
				$final=array();
					
			}
	}	
	
	if(count($final)>0){
		$q->QUERY_SQL($prefix.@implode(",",$final));
		if(!$q->ok){ufdbguard_admin_events("Fatal: $q->mysql_error",__FUNCTION__,__FILE__,__LINE__,"update-malwares");return;}
		$final=array();	
	}
	@unlink($ExtractedTmp);
	$CountB=$q->COUNT_ROWS("uris_malwares");
	if($GLOBALS["VERBOSE"]){echo "CountB -> $CountB in $c Lines\n";}
	
	$SUM=$CountB-$CountA;
	if($GLOBALS["VERBOSE"]){echo __FUNCTION__."() SUM --------- > $SUM new items\n";}
	if($SUM>0){ufdbguard_admin_events("Success adding $SUM new malwares uris",__FUNCTION__,__FILE__,__LINE__,"update-malwares");}

}
function uncompress($srcName, $dstName) {
    $sfp = gzopen($srcName, "rb");
    $fp = fopen($dstName, "w");

    while ($string = gzread($sfp, 4096)) {
        fwrite($fp, $string, strlen($string));
    }
    gzclose($sfp);
    fclose($fp);

} 


function compress($source,$dest){
    $mode='wb9';
    $error=false;
    $fp_out=gzopen($dest,$mode);
    if(!$fp_out){return;}
    $fp_in=fopen($source,'rb');
    if(!$fp_in){return;}
    
    while(!feof($fp_in)){
    	gzwrite($fp_out,fread($fp_in,1024*512));
    }
    fclose($fp_in);
    gzclose($fp_out);
    echo "Compress: $source (". filesize($dest)." bytes) done\n";
	return true;
}


function ifMustBeExecuted(){
	$users=new usersMenus();
	$sock=new sockets();
	$update=true;
	$EnableWebProxyStatsAppliance=$sock->GET_INFO("EnableWebProxyStatsAppliance");
	$CategoriesRepositoryEnable=$sock->GET_INFO("CategoriesRepositoryEnable");
	if(!is_numeric($CategoriesRepositoryEnable)){$CategoriesRepositoryEnable=0;}
	if(!is_numeric($EnableWebProxyStatsAppliance)){$EnableWebProxyStatsAppliance=0;}
	$EnableRemoteStatisticsAppliance=$sock->GET_INFO("EnableRemoteStatisticsAppliance");
	if(!is_numeric($EnableRemoteStatisticsAppliance)){$EnableRemoteStatisticsAppliance=0;}
	if($EnableRemoteStatisticsAppliance==1){WriteMyLogs("EnableRemoteStatisticsAppliance ACTIVE ,ABORTING TASK",__FUNCTION__,__FILE__,__LINE__);die();}	
	
	if($EnableWebProxyStatsAppliance==1){return true;}	
	$CategoriesRepositoryEnable=$sock->GET_INFO("CategoriesRepositoryEnable");
	if($CategoriesRepositoryEnable==1){return true;}
	if(!$users->SQUID_INSTALLED){$update=false;}
	return $update;
}