use strict;

#
# Sample configuration file for amavis-stats (traditional style, chatty,
# you may prefer to start with the more concise amavis-stats.conf)
#

#
# Section I		- Essential daemon settings
# Section II	- Logging
#

#
# Section I - Essential daemon settings
#

# $MYHOME and $MYCACHE serves as a quick default for some other configuration settings.
# More refined control is available with each individual setting further down.
# $MYHOME and $MYCACHE are not used directly by the program. No trailing slash!
# $MYHOME			= '/usr/local/var/lib/amavis-stats';   # (default is '/usr/local/var/lib/amavis-stats')
# $MYCACHE			= '/usr/local/var/cache/amavis-stats';   # (default is '/usr/local/var/cache/amavis-stats')

# Set the user and group to which the daemon will change if started as root
# (otherwise just keeps the UID unchanged, and these settings have no effect):
# $daemon_user	= 'postfix';   # (no default;  customary: postfix)
# $daemon_group	= 'postfix';   # (no default;  customary: postfix)

# Cause AmavisStats::Daemonize parameters 'background' and 'setsid' to be set,
# resulting in the program to detach itself from the terminal
# $daemonize		= 0;  # (default is 1)

# Run the daemon in the specified chroot jail if nonempty:
#$daemon_chroot_dir = $MYHOME;  # (default is undef, meaning: do not chroot)

$pid_file			= "$MYHOME/amavis-stats.pid";	# (default is "$MYHOME/amavis-stats.pid")

# What log file to scan for amavisd-new data:
$scan_logfile		= "/var/log/amavis.log";		# (default is "/var/log/amavis.log")

# Run the daemon at the specified time:
# Can be from 60 seconds to 3600 seconds (1 minute to 30 minutes)
# Must be in 60 seconds increments. (self correcting)
# $scan_time			= undef;	# (default is 300 seconds, which is 5 minutes)

$path				= '/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/usr/bin:/bin';

# If you have more than one domain, you can break down the statstics by domain.
# localhost should not need to be specified
# @my_domains		= qw(example1.com example2.com);
# @my_domains		= qw(); # no per domain statistics

#
# Section II - Logging
#

# true (e.g. 1) => syslog;  false (e.g. 0) => logging to file
$DO_SYSLOG = 1;						# (defaults to 0)
$SYSLOG_LEVEL	= 'mail.info';		# (facility.priority, default 'mail.info')

# Log file (if not using syslog)
$LOGFILE		= undef;  # (defaults to empty, no log)

#NOTE: levels are not strictly observed and are somewhat arbitrary
# 0: startup/exit/failure messages
# 1: some basic messages
# 2: some more interesting messages
# 3: NA - for expansion
# 4: NA - for expansion
# 5: lots of debug details
$log_level		= 1;				# (defaults to 0)

$DEBUG			= 0;				# (defaults to 0)

1;  # insure a defined return
